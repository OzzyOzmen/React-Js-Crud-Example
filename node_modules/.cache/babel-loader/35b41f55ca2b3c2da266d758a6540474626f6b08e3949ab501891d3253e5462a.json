{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/reactapirequests/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define UserForm component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  formData,\n  handleInputChange,\n  handleSubmit,\n  selectedUser,\n  roles\n}) => {\n  // Define form fields\n  const formFields = [{\n    name: 'name',\n    label: 'Name',\n    type: 'text'\n  }, {\n    name: 'username',\n    label: 'Username',\n    type: 'text'\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password'\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email'\n  }, {\n    name: 'phone',\n    label: 'Phone',\n    type: 'text'\n  }, {\n    name: 'address',\n    label: 'Address',\n    type: 'text'\n  }, {\n    name: 'city',\n    label: 'City',\n    type: 'text'\n  }, {\n    name: 'zipcode',\n    label: 'Zipcode',\n    type: 'text'\n  }, {\n    name: 'company',\n    label: 'Company',\n    type: 'text'\n  }, {\n    name: 'website',\n    label: 'Website',\n    type: 'url'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [formFields.map(({\n      name,\n      label,\n      type\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: name,\n        value: formData[name] || '',\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"role\",\n        value: formData.role || '',\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a role--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), Array.isArray(roles) && roles.map(({\n          id,\n          role\n        }) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: role,\n          children: role\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: selectedUser ? 'Update User' : 'Add User'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = UserForm;\nfunction FetchingData() {\n  _s();\n  const [datas, setDatas] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [roles, setRoles] = useState([]); // Initialize roles as an empty array\n  const [isFormVisible, setIsFormVisible] = useState(false); // State for controlling form visibility\n\n  // Fetch existing data and roles\n  useEffect(() => {\n    // Fetch users\n    axios.get('http://localhost:8000/user/').then(response => {\n      setDatas(response.data);\n    }).catch(err => console.error('Failed to fetch data:', err));\n\n    // Fetch roles\n    axios.get('http://localhost:8000/roles/').then(response => {\n      // Extract roles array from response data and handle it safely\n      const rolesData = Array.isArray(response.data.roles) ? response.data.roles : [];\n      console.log('Roles data received:', rolesData);\n      setRoles(rolesData);\n    }).catch(err => console.error('Failed to fetch roles:', err));\n  }, []);\n\n  // Function to handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Function to add or update a user\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isNewUser = !selectedUser; // Determine if adding or updating a user\n    const url = isNewUser ? 'http://localhost:8000/user/' : `http://localhost:8000/user/${selectedUser.id}/`;\n    const method = isNewUser ? 'post' : 'put';\n    axios({\n      method,\n      url,\n      data: {\n        ...formData,\n        id: isNewUser ? datas.reduce((maxId, data) => Math.max(maxId, data.id), 0) + 1 : selectedUser.id,\n        updated_at: isNewUser ? null : new Date().toISOString()\n      }\n    }).then(response => {\n      const user = response.data;\n      if (isNewUser) {\n        console.log('New user added:', user);\n        // Add the new user to the data list\n        setDatas([...datas, user]);\n      } else {\n        console.log('User updated:', user);\n        // Update the user in the data list\n        setDatas(datas.map(data => data.id === selectedUser.id ? user : data));\n      }\n      // Reset the form and hide it\n      setSelectedUser(null);\n      setFormData({});\n      setIsFormVisible(false);\n    }).catch(err => console.error(`Failed to ${method === 'post' ? 'add' : 'update'} user:`, err));\n  };\n\n  // Function to delete a user\n  const deleteUser = userId => {\n    axios.delete(`http://localhost:8000/user/${userId}/`).then(() => {\n      console.log(`User with ID ${userId} deleted.`);\n      // Remove the deleted user from the data list\n      setDatas(datas.filter(data => data.id !== userId));\n    }).catch(err => console.error(`Failed to delete user with ID ${userId}:`, err));\n  };\n\n  // Function to prepare the form data for editing a user\n  const handleEditButtonClick = user => {\n    setSelectedUser(user);\n    setFormData({\n      name: user.name,\n      username: user.username,\n      password: user.password,\n      email: user.email,\n      phone: user.phone,\n      address: user.address,\n      city: user.city,\n      zipcode: user.zipcode,\n      company: user.company,\n      website: user.website,\n      role: user.role\n    });\n    setIsFormVisible(true); // Show the form when editing a user\n  };\n\n  // Handle \"Add User\" button click\n  const handleAddUserButtonClick = () => {\n    setSelectedUser(null); // Clear selected user\n    setFormData({}); // Reset form data\n    setIsFormVisible(true); // Show the form for adding a new user\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"CRUD Data Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: datas.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [data.id, \" - \", data.username, \" - \", data.name, \" - \", data.password, \" - \", data.email, \" - \", data.phone, \" - \", data.address, \", \", data.city, \", \", data.zipcode, \" - \", data.company, \" - \", data.website, \" - \", data.role, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditButtonClick(data),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteUser(data.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddUserButtonClick,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Add New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(UserForm, {\n      formData: formData,\n      handleInputChange: handleInputChange,\n      handleSubmit: handleSubmit,\n      selectedUser: selectedUser,\n      roles: roles // Pass roles as props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchingData, \"dvUFoFghRWWXRDJWXiBhWUjV6sQ=\");\n_c2 = FetchingData;\nexport default FetchingData;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserForm\");\n$RefreshReg$(_c2, \"FetchingData\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","formData","handleInputChange","handleSubmit","selectedUser","roles","formFields","name","label","type","onSubmit","children","map","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","role","Array","isArray","id","_c","FetchingData","_s","datas","setDatas","setSelectedUser","setFormData","setRoles","isFormVisible","setIsFormVisible","get","then","response","data","catch","err","console","error","rolesData","log","e","target","preventDefault","isNewUser","url","method","reduce","maxId","Math","max","updated_at","Date","toISOString","user","deleteUser","userId","delete","filter","handleEditButtonClick","username","password","email","phone","address","city","zipcode","company","website","handleAddUserButtonClick","style","display","flexDirection","alignItems","textAlign","onClick","marginBottom","_c2","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/reactapirequests/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define UserForm component\nconst UserForm = ({ formData, handleInputChange, handleSubmit, selectedUser, roles }) => {\n    // Define form fields\n    const formFields = [\n        { name: 'name', label: 'Name', type: 'text' },\n        { name: 'username', label: 'Username', type: 'text' },\n        { name: 'password', label: 'Password', type: 'password' },\n        { name: 'email', label: 'Email', type: 'email' },\n        { name: 'phone', label: 'Phone', type: 'text' },\n        { name: 'address', label: 'Address', type: 'text' },\n        { name: 'city', label: 'City', type: 'text' },\n        { name: 'zipcode', label: 'Zipcode', type: 'text' },\n        { name: 'company', label: 'Company', type: 'text' },\n        { name: 'website', label: 'Website', type: 'url' },\n    ];\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {formFields.map(({ name, label, type }) => (\n                <div key={name}>\n                    <label>{label}:</label>\n                    <input\n                        type={type}\n                        name={name}\n                        value={formData[name] || ''}\n                        onChange={handleInputChange}\n                    />\n                </div>\n            ))}\n            {/* Dropdown list for role selection */}\n            <div>\n                <label>Role:</label>\n                <select\n                    name=\"role\"\n                    value={formData.role || ''}\n                    onChange={handleInputChange}\n                >\n                    <option value=\"\">--Select a role--</option>\n                    {Array.isArray(roles) && roles.map(({ id, role }) => (\n                        <option key={id} value={role}>\n                            {role}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <button type=\"submit\">{selectedUser ? 'Update User' : 'Add User'}</button>\n        </form>\n    );\n};\n\nfunction FetchingData() {\n    const [datas, setDatas] = useState([]);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [formData, setFormData] = useState({});\n    const [roles, setRoles] = useState([]); // Initialize roles as an empty array\n    const [isFormVisible, setIsFormVisible] = useState(false); // State for controlling form visibility\n\n    // Fetch existing data and roles\n    useEffect(() => {\n        // Fetch users\n        axios.get('http://localhost:8000/user/')\n            .then(response => {\n                setDatas(response.data);\n            })\n            .catch(err => console.error('Failed to fetch data:', err));\n\n        // Fetch roles\n        axios.get('http://localhost:8000/roles/')\n            .then(response => {\n                // Extract roles array from response data and handle it safely\n                const rolesData = Array.isArray(response.data.roles) ? response.data.roles : [];\n                console.log('Roles data received:', rolesData);\n                setRoles(rolesData);\n            })\n            .catch(err => console.error('Failed to fetch roles:', err));\n    }, []);\n\n    // Function to handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    // Function to add or update a user\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const isNewUser = !selectedUser; // Determine if adding or updating a user\n        const url = isNewUser ? 'http://localhost:8000/user/' : `http://localhost:8000/user/${selectedUser.id}/`;\n        const method = isNewUser ? 'post' : 'put';\n\n        axios({\n            method,\n            url,\n            data: {\n                ...formData,\n                id: isNewUser ? datas.reduce((maxId, data) => Math.max(maxId, data.id), 0) + 1 : selectedUser.id,\n                updated_at: isNewUser ? null : new Date().toISOString(),\n            },\n        })\n        .then(response => {\n            const user = response.data;\n\n            if (isNewUser) {\n                console.log('New user added:', user);\n                // Add the new user to the data list\n                setDatas([...datas, user]);\n            } else {\n                console.log('User updated:', user);\n                // Update the user in the data list\n                setDatas(datas.map(data => data.id === selectedUser.id ? user : data));\n            }\n            // Reset the form and hide it\n            setSelectedUser(null);\n            setFormData({});\n            setIsFormVisible(false);\n        })\n        .catch(err => console.error(`Failed to ${method === 'post' ? 'add' : 'update'} user:`, err));\n    };\n\n    // Function to delete a user\n    const deleteUser = (userId) => {\n        axios.delete(`http://localhost:8000/user/${userId}/`)\n            .then(() => {\n                console.log(`User with ID ${userId} deleted.`);\n                // Remove the deleted user from the data list\n                setDatas(datas.filter(data => data.id !== userId));\n            })\n            .catch(err => console.error(`Failed to delete user with ID ${userId}:`, err));\n    };\n\n    // Function to prepare the form data for editing a user\n    const handleEditButtonClick = (user) => {\n        setSelectedUser(user);\n        setFormData({\n            name: user.name,\n            username: user.username,\n            password: user.password,\n            email: user.email,\n            phone: user.phone,\n            address: user.address,\n            city: user.city,\n            zipcode: user.zipcode,\n            company: user.company,\n            website: user.website,\n            role: user.role,\n        });\n        setIsFormVisible(true); // Show the form when editing a user\n    };\n\n    // Handle \"Add User\" button click\n    const handleAddUserButtonClick = () => {\n        setSelectedUser(null); // Clear selected user\n        setFormData({}); // Reset form data\n        setIsFormVisible(true); // Show the form for adding a new user\n    };\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <h1 style={{ textAlign: 'center' }}>CRUD Data Process</h1>\n            <ul>\n                {datas.map((data) => (\n                    <li key={data.id}>\n                        {data.id} - {data.username} - {data.name} - {data.password} - {data.email} - {data.phone} - {data.address}, {data.city}, {data.zipcode} - {data.company} - {data.website} - {data.role}\n                        {/* Edit button */}\n                        <button onClick={() => handleEditButtonClick(data)}>Edit</button>\n                        {/* Delete button */}\n                        <button onClick={() => deleteUser(data.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n            {/* Button to add a new user */}\n            <button onClick={handleAddUserButtonClick} style={{ marginBottom: '20px' }}>Add New User</button>\n\n            {/* Render form for updating or adding a user */}\n            {isFormVisible && (\n                <UserForm\n                    formData={formData}\n                    handleInputChange={handleInputChange}\n                    handleSubmit={handleSubmit}\n                    selectedUser={selectedUser}\n                    roles={roles} // Pass roles as props\n                />\n            )}\n        </div>\n    );\n}\n\nexport default FetchingData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}